# :warning: Cấu Trúc Dữ Liệu & Giải Thuật (Data Structures And Algorithms) :100:

:triangular_flag_on_post: Chương trình dạng menu lựa chọn ([Menu](https://github.com/BachMinhTuyen/C-Exercises/blob/main/000_ChuongTrinh_DangMenuLuaChon.cpp)) :heavy_check_mark:

**:bookmark: >>>>>>>>>>>>>> MỤC LỤC <<<<<<<<<<<<<<<:bookmark:**

:point_right: **Danh sách liên kết đơn** ([Single Linked List](#SingleLinkedList)):fire:

:point_right: **Cấu Trúc Stack** ([Stack Structure](#Stack)) :fire:

:point_right: **Cấu Trúc Queue** ([Queue Structure](#Queue)) :fire:

:point_right: **Cây Nhị Phân** ([Binary Tree](#BinaryTree)) :fire:

:point_right: **Cây Nhị Phân Tìm Kiếm** ([Binary Search Tree](#BinarySearchTree)) :fire:

- **Hiển Thị (Vẽ) Cây Nhị Phân** ([Display Binary Search Tree](#Display_BinarySearchTree))

:point_right: **Cây Cân Bằng** ([AVL Tree](#AVLTree)) :fire:

---

:wave: **Viết bằng ngôn ngữ C**  :gift:

:construction:**Chú ý:** Dùng để tham khảo

:rotating_light: **Lưu ý:** :rotating_light: Nếu chạy **những cú pháp cũ** thì dùng `#define _CRT_SECURE_NO_WARNINGS` để trên cùng so với thư viện.

:bulb: **Ví dụ:**

```
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<conio.h>
```

---
<a name="SingleLinkedList"></a>
## :pushpin: **Danh Sách Liên Kết Đơn ([Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Single%20Linked%20List))** :sparkles: 

1. :triangular_flag_on_post: Cài đặt danh sách liên kết đơn ([Install - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/Install_SingleLinkedList.cpp)) :heavy_check_mark:
2. :triangular_flag_on_post: Chèn vào đầu danh sách liên kết đơn ([Insert First-  Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/InsertFirst_SingleLinkedList.cpp)) :heavy_check_mark:
3. :triangular_flag_on_post: Chèn vào cuối danh sách liên kết đơn ([Insert Last - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/InsertLast_SingleLinkedList.cpp)) :heavy_check_mark:
4. :triangular_flag_on_post: Chèn vào sau một phần tử trong danh sách liên kết đơn ([Insert After - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/InsertAfter_SingleLinkedList.cpp)) :heavy_check_mark:
5. :triangular_flag_on_post: Chèn vào trước một phần tử trong danh sách liên kết đơn ([Insert - Before Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/InsertBefore_SingleLinkedList.cpp)) :heavy_check_mark:
6. :triangular_flag_on_post: Tìm kiếm một phần tử trong danh sách liên kết đơn ([Search - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/Search_SingleLinkedList.cpp)) :heavy_check_mark:
7. :triangular_flag_on_post: Xoá đầu danh sách liên kết đơn ([Delete First - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/DeleteFirst_SingleLinkedList.cpp)) :heavy_check_mark:
8. :triangular_flag_on_post: Xoá cuối danh sách liên kết đơn ([Delete Last - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/DeleteLast_SingleLinkedList.cpp)) :heavy_check_mark:
9. :triangular_flag_on_post: Xoá sau một phần tử trong danh sách liên kết đơn ([Delete After - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/DeleteAfter_SingleLinkedList.cpp)) :heavy_check_mark:
10. :triangular_flag_on_post: Xoá một phần tử trong danh sách liên kết đơn ([Delete Element - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/DeleteElement_SingleLinkedList.cpp)) :heavy_check_mark:
11. :triangular_flag_on_post: Xoá toàn bộ danh sách liên kết đơn ([Delete All - Single Linked List](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/DeleteAll_SingleLinkedList.cpp)) :heavy_check_mark:
12. :file_folder: **Bài tập** ([Exercise](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Single%20Linked%20List/Exercise)) :sparkles: 
 - :file_folder: **Danh sách liên kết đơn (tiếp theo)** ([Single Linked List (Continue)](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Single%20Linked%20List/Exercise/SingleLinkedList_Continue)) :sparkles: 
 
| :one: Quản lý danh sách phát nhạc | ([Manage Music Playlists](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Single%20Linked%20List/Exercise/SingleLinkedList_Continue/ManageMusicPlaylists)) :partly_sunny: |
| ----- | ----- |
| :page_facing_up: **File text** - thông tin các bài hát | ([Info List Of Songs](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/Exercise/SingleLinkedList_Continue/ManageMusicPlaylists/InfoListOfSongs.txt)) :link: |
| :computer: **Source code** - quản lý danh sách phát nhạc | ([Manage Music Playlists](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/Exercise/SingleLinkedList_Continue/ManageMusicPlaylists/ManageMusicPlaylists.cpp)) :link: |
  
| :two: Quản lý thông tin điểm sinh viên | ([Student Score Management](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Single%20Linked%20List/Exercise/SingleLinkedList_Continue/StudentScoreManagement)) :partly_sunny: |
|------|------|
| :page_facing_up: **File text** - thông tin điểm của sinh viên | ([Student Information](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/Exercise/SingleLinkedList_Continue/StudentScoreManagement/StudentInformation.txt)) :link: |
| :computer: **Source code** - quản lý thông tin điểm sinh viên | ([Student Score Management](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Single%20Linked%20List/Exercise/SingleLinkedList_Continue/StudentScoreManagement/StudentScoreManagement.cpp)) :link: |
---

<a name="Stack"></a>
## :pushpin: **Cấu Trúc Stack ([Stack Structure](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Stack%20Structure))** :sparkles: 

:loudspeaker: **Describe (mô tả):**

- Một stack là một cấu trúc dữ liệu mà việc **thêm vào và loại bỏ phần tử chỉ được thực hiện ở một đầu duy nhất** (*gọi là đỉnh* - top của stack)
- Là một loại cấu trúc dữ liệu hoạt động theo nguyên tắc: **vào sau ra trước - LIFO (Last In First Out)**
- Tóm tắt: **Chèn đầu và xoá đầu** (như danh sách liên kết đơn)

1. :triangular_flag_on_post: Cài đặt cấu trúc ngăn xếp ([Install - Stack](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Stack%20Structure/Install_Stack.cpp)) :heavy_check_mark:

| :file_folder: **Bài tập**  | ([Exercise](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Stack%20Structure/Exercise)) :sparkles: |
| ----------- | ----------- |
| :computer: Ký pháp Ba Lan  | ([Infix -> Profix](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Stack%20Structure/Exercise/KyPhapBaLan.cpp)) :link: |
| :computer: Ký pháp nghịch đảo Ba Lan | ([Infix -> Postfix](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Stack%20Structure/Exercise/KyPhapNghichDaoBaLan.cpp)) :link: |
|:computer: Chuyển đổi hệ cơ số (thập phân, bát phân, thập lục phân)|([Convert radix (decimal, octal, hexadecimal)](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Stack%20Structure/Exercise/Convert_radix.cpp) :link:|
|:computer: Kiểm tra biểu thức cân bằng|([Check Equilibrium Expression](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Stack%20Structure/Exercise/CheckEquilibriumExpression.cpp)) :link:|
|:computer: Kiểm tra dấu ngoặc đơn dư thừa|([Check Parentheses - Redundant ](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Stack%20Structure/Exercise/CheckParentheses_Redundant.cpp)) :link:|
|:computer: Đảo ngược chuỗi |([Reverse String](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Stack%20Structure/Exercise/ReverseString.cpp)):link:|
---

<a name="Queue"></a>
## :pushpin: **Cấu Trúc Queue ([Queue Structure](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Queue%20Structure))** :sparkles: 

:loudspeaker: **Describe (mô tả):**

- Một queue là một cấu trúc dữ liệu mà việc **thêm phần tử được thực hiện ở cuối (tail)** *và* **xoá phần tử được thực hiện ở đầu (head)**.
- Là một loại cấu trúc dữ liệu hoạt động theo nguyên tắc: **vào trước ra trước - FIFO (First In First Out)**
- Tóm tắt: **Chèn cuối và xoá đầu** (như danh sách liên kết đơn)

1. :triangular_flag_on_post: Cài đặt cấu trúc hàng đợi ([Install - Queue](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Queue%20Structure/Install_Queue.cpp)) :heavy_check_mark:

| :file_folder: **Bài tập**  | (Exercise) :sparkles: |
| ----------- | ----------- |
|(==trống==)|(==trống==)|
---

<a name="BinaryTree"></a>
## :pushpin: **Cây nhị phân ([Binary Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Binary%20Tree))** :sparkles: 

1. :triangular_flag_on_post: **Tạo và duyệt** cây nhị phân ([Create and Show Binary Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Tree/CreateAndShow_BinaryTree.cpp)) :heavy_check_mark:
- *:point_down: Gồm có các hàm sau đây :point_down:*
- :palm_tree: **Tạo** cây nhị phân **(từ bàn phím)** :partly_sunny:
- :palm_tree: **Tạo** cây nhị phân **(tự động)** :partly_sunny:
- :palm_tree: **Tạo** cây nhị phân **(từ mảng)** :warning: *[chưa hoàn thành]* :warning:
- :palm_tree: **Duyệt** cây theo **Node - Left - Right** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Node - Right - Left** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Left - Node - Right** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Left - Right - Node** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Right - Node - Left** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Right - Left - Node** :partly_sunny:
2. :triangular_flag_on_post: *[:warning:chưa hoàn thành:warning:]* :heavy_check_mark:

| :file_folder: **Bài tập**  | (Exercise) :sparkles: |
| ----------- | ----------- |
|(==trống==)|(==trống==)|
---

<a name="BinarySearchTree"></a>
## :pushpin: **Cây nhị phân tìm kiếm ([Binary Search Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Binary%20Search%20Tree))** :sparkles: 

<a name="Display_BinarySearchTree"></a>
>#### :file_folder: Hiển thị (vẽ) cây nhị phân ([Display Binary Search Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Binary%20Search%20Tree/Display%20Binary%20Search%20Tree)) :sparkles: 
>
> :pencil2: **asciinode.cpp** :exclamation:
> 
> :pencil2: **asciinode.h** :exclamation:
> 
> :pencil2: **BinarySearchTree.cpp** :exclamation:
> 
> :pencil2: **BinarySearchTree.h** :exclamation:
> 
> :pencil2: **main.cpp** :exclamation:
> 
> - Để tải về bấm **[tại đây](https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Binary%20Search%20Tree/Display%20Binary%20Search%20Tree&fileName=Binary%20Search%20Tree&rootDirectory=Display%20Binary%20Search%20Tree)**
> - Tải xong -> vào thư mục lưu file vừa tải -> **chuột phải** vào file vừa tải chọn "Extract Here"

1. :triangular_flag_on_post: **Tạo và duyệt** cây nhị phân tìm kiếm ([Create and Show Binary Search Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Search%20Tree/CreateAndShow_BinarySearchTree.cpp)) :heavy_check_mark:
- *:point_down: Gồm có các hàm sau đây :point_down:*
- :palm_tree: **Tạo** cây nhị phân tìm kiếm **(từ bàn phím)** :partly_sunny:
- :palm_tree: **Tạo** cây nhị phân tìm kiếm **(tự động)** :partly_sunny:
- :palm_tree: **Tạo** cây nhị phân tìm kiếm **(từ mảng)** :warning: *[chưa hoàn thành]* :warning:
- :palm_tree: **Duyệt** cây theo **Node - Left - Right** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Node - Right - Left** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Left - Node - Right** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Left - Right - Node** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Right - Node - Left** :partly_sunny:
- :palm_tree: **Duyệt** cây theo **Right - Left - Node** :partly_sunny:
2. :triangular_flag_on_post: **Tạo và duyệt** cây nhị phân tìm kiếm **(từ File)** ([Create and Show Binary Search Tree From File](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Search%20Tree/Create_BinarySearchTree_FromFile.cpp)) :heavy_check_mark:
3. :triangular_flag_on_post: Xoá một nút ra khỏi cây nhị phân tìm kiếm [Delete TNode - Binary Search Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Search%20Tree/DeleteTNode_BinarySearchTree.cpp) :heavy_check_mark:
4. :triangular_flag_on_post: Tìm nút trên cây nhị phân tìm kiếm [Find TNode - Binary Search Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Search%20Tree/FindTNode_BinarySearchTree.cpp) :heavy_check_mark:
5. :triangular_flag_on_post: Tìm giá trị lớn nhất trên cây nhị phân tìm kiếm [Max TNode - Binary Search Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Search%20Tree/MaxTNode_BinarySearchTree.cpp) :heavy_check_mark:
6. :triangular_flag_on_post: *[:warning:chưa hoàn thành:warning:]* :heavy_check_mark:

| :file_folder: **Bài tập**  | ([Exercise](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/Binary%20Search%20Tree/Exercise)) :sparkles: |
| ----------- | ----------- |
| :computer: Duyệt theo chiều rộng | ([Traverse Breath-first Search](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Search%20Tree/Exercise/Traverse_Breadth.cpp)) :link: |
| :computer: Duyệt theo chiều sâu | ([Traverse Depth-first Search](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/Binary%20Search%20Tree/Exercise/Traverse_Depth.cpp)) :link: |

---

<a name="AVLTree"></a>
## :pushpin: **Cây cân bằng ([AVL Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/AVL%20Tree))** :sparkles: 

1. :triangular_flag_on_post: Cài đặt cơ bản cây cân bằng (đầy đủ) ([Install Basic - AVL Tree](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/tree/main/AVL%20Tree/Install%20Basic%20AVL%20Tree)) :heavy_check_mark:
2. :triangular_flag_on_post: Hàm chèn nút AVL ([Insert_AVLNode_Function](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/AVL%20Tree/Insert_AVLNode_Function.txt)) :heavy_check_mark:
3. :triangular_flag_on_post: Hàm xoá nút AVL ([Delete_AVLNode_Function](https://github.com/BachMinhTuyen/Data-Structures-And-Algorithms/blob/main/AVL%20Tree/Delete_AVLNode_Function.txt)) :heavy_check_mark:

| :file_folder: **Bài tập**  | (Exercise) :sparkles: |
| ----------- | ----------- |
|(==trống==)|(==trống==)|
---
